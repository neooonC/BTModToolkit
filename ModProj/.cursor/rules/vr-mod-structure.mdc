---
title: "VR Mod Structure"
description: "Project structure and file naming standards for Lua VR mod code generation"
type: "structure"
globs: ["Assets/Build/**/*", "Assets/Mods/**/*", "**/*.asset"]
alwaysApply: false
tags: ["structure", "vr", "lua"]
---

# VR Mod Structure

## Standard Mod Directory Structure
```
Assets/Build/{ModName}/
├── Script/
│   ├── {ModName}Script.txt        # Main logic
│   ├── {ModName}Controller.txt    # VR interactions  
│   └── Utils/                     # Helper functions
├── Config/
│   └── {ModName}_Info.asset       # Configuration
├── Effect/                        # Visual effects prefabs
├── Audio/                         # Sound files (.wav, .mp3)
├── Icon/                          # UI assets (.png)
└── Documentation/                 # Mod documentation
```

## File Naming Standards
- **Lua Scripts**: `{ComponentName}Script.txt`
- **Config Files**: `{ModName}_Info.asset`
- **Prefabs**: `{ModName}_{Variant}.prefab`
- **Audio Files**: `{ModName}_{Action}.{ext}`
- **Icons**: `{ModName}_{Type}_icon.png`
- **Effects**: `{ModName}_{Effect}.prefab`

## Config Asset Structure
```yaml
# {ModName}_Info.asset
loadOnSpawn: 1
storeItemInfo:
- addStoreItemName: WMD_{ModName}
  dependItemName: 
  dependencies: []
  name: {DisplayName}
  desc: {ModDescription}
  itemType: 0                    # 0=Weapon, 1=Prop, 2=Avatar, etc.
  dungeonInfos: []
  supportedMultiplayer: 1        # 1=Support multiplayer, 0=Single only
sceneModInfo: []
propInfo: []
avatarInfo: []
skinInfo: []
roleModInfo: []
handPoseInfo: []
hitInfo: []
networkPrefabRegister:           # Network objects for multiplayer
- WMD_{NetworkObject1}_Network
- WMD_{NetworkObject2}_Network
```